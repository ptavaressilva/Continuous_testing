pipeline {
  agent any
  environment {
    WORKINGDIR = "infrastructure/repositories"
  }
  stages {
    stage('Review Terraform Plan') {
      when {
        beforeAgent true
        allOf {
          changeRequest target: 'master'
        }
      }
      steps{
        dir("${WORKINGDIR}/module/test") {
          sh """
          aws sts assume-role-with-web-identity \
          --role-arn \$AWS_ROLE_ARN \
          --role-session-name mh9test \
          --web-identity-token file://\$AWS_WEB_IDENTITY_TOKEN_FILE \
          --duration-seconds 1000 > /tmp/irp-cred.txt
          export AWS_ACCESS_KEY_ID="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.AccessKeyId")"
          export AWS_SECRET_ACCESS_KEY="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.SecretAccessKey")"
          export AWS_SESSION_TOKEN="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.SessionToken")"
          go test -mod vendor
          """
        }
        dir(WORKINGDIR) {
          sh """
          aws sts assume-role-with-web-identity \
          --role-arn \$AWS_ROLE_ARN \
          --role-session-name mh9test \
          --web-identity-token file://\$AWS_WEB_IDENTITY_TOKEN_FILE \
          --duration-seconds 1000 > /tmp/irp-cred.txt
          export AWS_ACCESS_KEY_ID="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.AccessKeyId")"
          export AWS_SECRET_ACCESS_KEY="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.SecretAccessKey")"
          export AWS_SESSION_TOKEN="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.SessionToken")"
          terraform version
          terraform init
          terraform plan
          """
        }
      }
    }
    stage('Apply Terraform') {
      when {
        beforeAgent true
        allOf {
          branch 'master'
        }
      }
      steps{
        dir(WORKINGDIR) {
          sh """
          terraform init
          aws sts assume-role-with-web-identity \
          --role-arn \$AWS_ROLE_ARN \
          --role-session-name mh9test \
          --web-identity-token file://\$AWS_WEB_IDENTITY_TOKEN_FILE \
          --duration-seconds 1000 > /tmp/irp-cred.txt
          export AWS_ACCESS_KEY_ID="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.AccessKeyId")"
          export AWS_SECRET_ACCESS_KEY="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.SecretAccessKey")"
          export AWS_SESSION_TOKEN="\$(cat /tmp/irp-cred.txt | jq -r ".Credentials.SessionToken")"
          terraform apply -auto-approve
          """
        }
      }
    }
  }
}
